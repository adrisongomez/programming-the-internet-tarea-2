// Code generated by goa v3.20.0, DO NOT EDIT.
//
// svc-products client
//
// Command:
// $ goa gen github.com/adrisongomez/pti-ecommerce-site/backends/design -o
// ./internal

package svcproducts

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "svc-products" service client.
type Client struct {
	ListProductEndpoint    goa.Endpoint
	GetProductByIDEndpoint goa.Endpoint
	CreateProductEndpoint  goa.Endpoint
}

// NewClient initializes a "svc-products" service client given the endpoints.
func NewClient(listProduct, getProductByID, createProduct goa.Endpoint) *Client {
	return &Client{
		ListProductEndpoint:    listProduct,
		GetProductByIDEndpoint: getProductByID,
		CreateProductEndpoint:  createProduct,
	}
}

// ListProduct calls the "listProduct" endpoint of the "svc-products" service.
// ListProduct may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - "Conflict" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) ListProduct(ctx context.Context, p *ListProductPayload) (res *ProductsList, err error) {
	var ires any
	ires, err = c.ListProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ProductsList), nil
}

// GetProductByID calls the "getProductById" endpoint of the "svc-products"
// service.
// GetProductByID may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - "Conflict" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) GetProductByID(ctx context.Context, p *GetProductByIDPayload) (res *Product, err error) {
	var ires any
	ires, err = c.GetProductByIDEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Product), nil
}

// CreateProduct calls the "createProduct" endpoint of the "svc-products"
// service.
// CreateProduct may return the following errors:
//   - "NotFound" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - "Conflict" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) CreateProduct(ctx context.Context, p *ProductInput) (res *Product, err error) {
	var ires any
	ires, err = c.CreateProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Product), nil
}
